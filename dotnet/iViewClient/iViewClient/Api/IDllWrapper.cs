using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace iViewClient.Api
{
    public interface IDllWrapper
    {
        int iV_AbortCalibration();
        int iV_AcceptCalibrationPoint();
        int iV_Calibrate();
        int iV_ChangeCalibrationPoint(int number, int positionX, int positionY);
        int iV_ClearAOI();
        int iV_ClearRecordingBuffer();
        int iV_ConfigureFilter(FilterType filter, FilterAction action, IntPtr data);
        int iV_Connect(StringBuilder sendIP, int sendPort, StringBuilder receiveIP, int receivePort);
        int iV_ConnectLocal();
        int iV_ContinueEyetracking();
        int iV_ContinueRecording(StringBuilder trialname);
        int iV_DefineAOI(ref AOIStruct aoi);
        int iV_DefineAOIPort(int port);
        int iV_DeleteREDGeometry(StringBuilder name);
        int iV_DisableAOI(StringBuilder aoiName);
        int iV_DisableAOIGroup(StringBuilder aoiGroup);
        int iV_DisableGazeDataFilter();
        int iV_DisableProcessorHighPerformanceMode();
        int iV_Disconnect();
        int iV_EnableAOI(StringBuilder aoiName);
        int iV_EnableAOIGroup(StringBuilder aoiGroup);
        int iV_EnableGazeDataFilter();
        int iV_EnableProcessorHighPerformanceMode();
        int iV_GetAccuracy(ref AccuracyStruct accuracyData, int visualization);
        int iV_GetAccuracyImage(ref ImageStruct image);
        int iV_GetAOIOutputValue(ref int aoiOutputValue);
        int iV_GetCalibrationParameter(ref CalibrationStruct calibrationData);
        int iV_GetCalibrationPoint(int calibrationPointNumber, ref CalibrationPointStruct calibrationPoint);
        int iV_GetCalibrationStatus(ref CalibrationStatusEnum calibrationStatus);
        int iV_GetCurrentCalibrationPoint(ref CalibrationPointStruct currentCalibrationPoint);
        int iV_GetCurrentREDGeometry(ref REDGeometryStruct geometry);
        int iV_GetCurrentTimestamp(ref Int64 currentTimestamp);
        int iV_GetDeviceName(out char[] deviceName);
        int iV_GetEvent(ref EventStruct eventDataSample);
        int iV_GetEyeImage(ref ImageStruct image);
        int iV_GetFeatureKey(ref Int64 featureKey);
        int iV_GetGeometryProfiles(int maxSize, ref StringBuilder profileNames);
        int iV_GetLicenseDueDate(ref DateStruct licenseDueDate);
        int iV_GetREDGeometry(StringBuilder profileName, ref REDGeometryStruct geometry);
        int iV_GetSample(ref SampleStruct rawDataSample);
        int iV_GetSceneVideo(ref ImageStruct image);
        int iV_GetSerialNumber(out char[] serialNumber);
        int iV_GetSystemInfo(ref SystemInfoStruct systemInfo);
        int iV_GetTrackingMonitor(ref ImageStruct image);
        int iV_GetTrackingStatus(ref TrackingStatusStruct trackingstatus);
        int iV_HideAccuracyMonitor();
        int iV_HideEyeImageMonitor();
        int iV_HideSceneVideoMonitor();
        int iV_HideTrackingMonitor();
        int iV_IsConnected();
        int iV_LoadCalibration(StringBuilder name);
        int iV_Log(StringBuilder message);
        int iV_PauseEyetracking();
        int iV_PauseRecording();
        int iV_Quit();
        int iV_ReleaseAOIPort();
        int iV_RemoveAOI(StringBuilder aoiName);
        int iV_ResetCalibrationPoints();
        int iV_SaveCalibration(StringBuilder name);
        int iV_SaveData(StringBuilder filename, StringBuilder description, StringBuilder user, int overwrite);
         int iV_SendCommand(StringBuilder etMessage);
        int iV_SendImageMessage(StringBuilder message);
        void iV_SetCalibrationCallback(MulticastDelegate calibrationCallback);
        void iV_SetConnectionTimeout(int time);
        int iV_SelectREDGeometry(StringBuilder profileName);
         void iV_SetResolution(int stimulusWidth, int stimulusHeight);
        void iV_SetEventCallback(MulticastDelegate eventCallback);
        int iV_SetEventDetectionParameter(int minDuration, int maxDispersion);
        void iV_SetEyeImageCallback(MulticastDelegate eyeImageCallback);
        int iV_SetLicense(StringBuilder key);
        int iV_SetLogger(int logLevel, StringBuilder filename);
        void iV_SetSampleCallback(MulticastDelegate sampleCallback);
        void iV_SetSceneVideoCallback(MulticastDelegate sceneVideoCallback);
        void iV_SetTrackingMonitorCallback(MulticastDelegate trackingMonitorCallback);
        void iV_SetTrackingParameter(int ET_PARAM_EYE, int ET_PARAM, int value);
        int iV_SetupCalibration(ref CalibrationStruct calibrationData);
        int iV_SetREDGeometry(ref REDGeometryStruct redGeometry);
        int iV_ShowAccuracyMonitor();
        int iV_ShowEyeImageMonitor();
        int iV_ShowSceneVideoMonitor();
        int iV_ShowTrackingMonitor();
        int iV_Start(int etApplication);
        int iV_StartRecording();
        int iV_StopRecording();
        int iV_TestTTL(int value);
        int iV_Validate();
    }
}